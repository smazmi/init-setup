---
- name: System setup
  hosts: localhost
  become: yes
  connection: local
  gather_facts: yes
  vars:
    user_home: "{{ lookup('env', 'HOME') }}"
    ZDOTDIR: "{{ user_home }}/.config/zsh"
    XDG_DATA_HOME: "{{ lookup('env', 'XDG_DATA_HOME') | default(user_home + '/.local/share') }}"
    XDG_CACHE_HOME: "{{ lookup('env', 'XDG_CACHE_HOME') | default(user_home + '/.cache') }}"
    XDG_CONFIG_HOME: "{{ lookup('env', 'XDG_CONFIG_HOME') | default(user_home + '/.config') }}"
    XDG_STATE_HOME: "{{ lookup('env', 'XDG_STATE_HOME') | default(user_home + '/.local/state') }}"
    yay_packages:
      - google-chrome
      - llogin
      - plymouth-theme-lone-git
      - spotify
      - stremio
      - tgpt-bin
      - ventoy-bin
      - xdg-ninja
      - whatsapp-for-linux
      - visual-studio-code-bin
      - aws-cli-v2
      - droidcam
      - postman-bin
    pacman_packages:
      - bat
      - bc
      - discord
      - dnsmasq
      - docker
      - docker-compose
      - eog
      - fd
      - fzf
      - ffmpegthumbnailer
      - gedit
      - gimp
      - git
      - github-cli
      - glow
      - gnome-calculator
      - go
      - gradle
      - htop
      - imagemagick
      - inxi
      - iptables-nft
      - jdk-openjdk
      - lazygit
      - libreoffice-still
      - man-db
      - man-pages
      - namcap
      - neovim
      - net-tools
      - nmap
      - noto-fonts-emoji
      - obs-studio
      - obsidian
      - okular
      - openbsd-netcat
      - p7zip
      - partitionmanager
      - plymouth
      - python-pip
      - python-pynvim
      - ripgrep
      - scrcpy
      - stow
      - telegram-desktop
      - tmux
      - unarchiver
      - unzip
      - wireguard-tools
      - yazi
      - zoxide

  tasks:
    - name: Export ZDOTDIR
      lineinfile:
        path: /etc/zsh/zprofile
        line: 'export ZDOTDIR="$HOME"/.config/zsh'
        create: yes
  
    - name: Export bash HISTFILE
      lineinfile:
        path: "{{ user_home }}/.bash_profile"
        line: 'export HISTFILE="${XDG_STATE_HOME}"/bash/history'
        create: yes
      become: no

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      become: no
      loop:
        - "{{ XDG_DATA_HOME }}/gnupg"
        - "{{ XDG_CACHE_HOME }}/nv"
        - "{{ XDG_DATA_HOME }}/nvm"
        - "{{ user_home }}/.local/share/cargo"
        - "{{ user_home }}/.local/share/rustup"
        - "{{ XDG_CONFIG_HOME }}/parallel"
        - "{{ XDG_CONFIG_HOME }}/aws/credentials"
        - "{{ XDG_CONFIG_HOME }}/aws/config"
        - "{{ XDG_CONFIG_HOME }}/npm"
        - "{{ XDG_DATA_HOME }}/gradle"
        - "{{ XDG_DATA_HOME }}/go"
        - "{{ XDG_DATA_HOME }}/android"
        - "{{ XDG_DATA_HOME }}/wine"
        - "{{ XDG_CACHE_HOME }}/npm"
        - "{{ XDG_CONFIG_HOME }}/npm/config"
        - "{{ XDG_STATE_HOME }}/npm/logs"
        - "{{ XDG_DATA_HOME }}/ansible"
        - "{{ user_home }}/python"

    - name: Create npmrc file
      copy:
        dest: "{{ XDG_CONFIG_HOME }}/npm/npmrc"
        content: |
          cache=${XDG_CACHE_HOME}/npm
          init-module=${XDG_CONFIG_HOME}/npm/config/npm-init.js
          logs-dir=${XDG_STATE_HOME}/npm/logs
      become: no

    - name: Create wgetrc file
      file:
        path: "{{ XDG_CONFIG_HOME }}/wgetrc"
        state: touch
      become: no
      
    - name: Create wgetrc file
      file:
        path: "{{ XDG_STATE_HOME }}/bash/history"
        state: touch
      become: no

    - name: Create npm-init.js file
      file:
        path: "{{ XDG_CONFIG_HOME }}/npm/config/npm-init.js"
        state: touch
      become: no

    - name: Create node_repl_history file
      file:
        path: "{{ XDG_DATA_HOME }}/node_repl_history"
        state: touch
      become: no

    - name: Create pythonrc file
      copy:
        dest: "{{ user_home }}/python/pythonrc"
        content: |
          def is_vanilla() -> bool:                                                                  
              import sys                                                                             
              return not hasattr(__builtins__, '__IPYTHON__') and 'bpython' not in sys.argv[0]       
                                                                                                        
          def setup_history():                                                                       
              import os                                                                              
              import atexit                                                                          
              import readline                                                                        
              from pathlib import Path                                                               
                                                                                                        
              if state_home := os.environ.get('XDG_STATE_HOME'):                                     
                  state_home = Path(state_home)                                                      
              else:                                                                                  
                  state_home = Path.home() / '.local' / 'state'                                      
                                                                                                        
              history: Path = state_home / 'python_history'                                          
                                                                                                        
              readline.read_history_file(str(history))                                               
              atexit.register(readline.write_history_file, str(history))                             
                                                                                                        
          if is_vanilla():                                                                           
              setup_history()  
      become: no

    - name: Create zlua file
      file:
        path: "{{ XDG_DATA_HOME }}/zlua"
        state: touch
      become: no

    - name: Clone zsh-autopair
      git:
        repo: 'https://github.com/hlissner/zsh-autopair.git'
        dest: "/usr/share/oh-my-zsh/custom/plugins/zsh-autopair"

    - name: Clone fzf-tab
      git:
        repo: 'https://github.com/Aloxaf/fzf-tab.git'
        dest: "/usr/share/oh-my-zsh/custom/plugins/fzf-tab"

    - name: Clone fzf-docker
      git:
        repo: 'https://github.com/pierpo/fzf-docker.git'
        dest: "/usr/share/oh-my-zsh/custom/plugins/fzf-docker"

    - name: Clone dotfiles
      git:
        repo: 'git@github.com:smazmi/dotfiles.git'
        dest: "{{ user_home }}/.dotfiles"
      become: no

    - name: Stow zsh configuration
      shell: stow zsh
      args:
        chdir: "{{ user_home }}/.dotfiles"
      become: no

    - name: Stow nvim configuration
      shell: stow nvim
      args:
        chdir: "{{ user_home }}/.dotfiles"
      become: no

    - name: Install yay
      pacman:
        name: yay
        state: present

    - name: Install pacman packages
      pacman:
        name: "{{ pacman_packages }}"
        state: present

    - name: Install yay packages
      shell: yay -S --noconfirm "{{ item }}"
      loop: "{{ yay_packages }}"
      become: no
    
    - name: Boot animation change
      shell: plymouth-set-default-theme -R lone
